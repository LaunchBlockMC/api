apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-template
  namespace: launchblock-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-template
      namespace: launchblock-services
  template:
    metadata:
      labels:
        app: api-template
        namespace: launchblock-services
    spec:
      imagePullSecrets:
        - name: private-registry-secret
      containers:
        - name: api-template
          image: private-docker-registry.launchblock.dev/api-auth:latest
          env:
            - name: PORT
              value: "8080"
            - name: AUTH_CLIENT_URL
              value: "http://api-auth.launchblock-services.svc.cluster.local:8080"
            - name: MONGODB_CONNECTION_STRING
              value: "mongodb://mongodb.launchblock-services.svc.cluster.local:27017"
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: username
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: password
            - name: PASSWORD_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: password-secret-key
            - name: TOKEN_SALT
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: token-salt
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: api-template
  namespace: launchblock-services
spec:
  selector:
    app: api-template
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: api-template
  namespace: launchblock-services
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`remove-if-private.launchblock.gg`)
      kind: Rule
      services:
        - name: api-auth
          port: 80
  tls:
    certResolver: letsencrypt